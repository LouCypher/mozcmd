/*
 *  This Source Code Form is subject to the terms of the Mozilla Public
 *  License, v. 2.0. If a copy of the MPL was not distributed with this
 *  file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 *  Contributor(s):
 *  - LouCypher (original code)
 */

[
  {
    name: "vs",
    description: "View HTML source of current page or a specified URL.",
    params: [
      {
        name: "url",
        type: "string",
        defaultValue: null,
        description: "Web page URL to view its source. If no URL is entered,\
                      view source of current page."
      }
    ],
    exec: function(args, context) {
      let environment = context.environment;
      let document = environment.document || environment.contentDocument;
      let chromeWindow = environment.chromeWindow || environment.chromeDocument.defaultView;

      let url;
      if (args.url)
        url = args.url;
      else
        url = document.URL;

      if (!/^[a-z0-9]+:/i.test(url))
        url = "http://" + url;  // Use 'http' by default

      chromeWindow.switchToTabHavingURI("view-source:" + url, true);
    }
  },

  {
    name: "vrs",
    description: "View rendered source of current page.",
    exec: function(args, context) {
      let environment = context.environment;
      let document = environment.document || environment.contentDocument;
      let chromeWindow = environment.chromeWindow || environment.chromeDocument.defaultView;

      let doctypeElem = "";
      let doctype = document.doctype;
      if (doctype) {
        doctypeElem += "<!DOCTYPE " + doctype.name;
        doctypeElem += doctype.publicId ? (' PUBLIC "' + doctype.publicId + '"') : "";
        doctypeElem += doctype.systemId ? (' "' + doctype.systemId + '"') : "";
        doctypeElem += ">\n";
      }
      let source = doctypeElem + document.documentElement.outerHTML;
      let isHTML = document.createElement("div").tagName === "DIV";
      let contentType = isHTML ? "text/html" : "application/xml";
      let dataURI = "data:" + contentType + ";charset=utf-8" + ","
                  + encodeURIComponent(source);
      chromeWindow.switchToTabHavingURI("view-source:" + dataURI, true);
    }
  }
]
