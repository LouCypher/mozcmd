/*
 *  This Source Code Form is subject to the terms of the Mozilla Public
 *  License, v. 2.0. If a copy of the MPL was not distributed with this
 *  file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 *  Contributor(s):
 *  - LouCypher (original code)
 */

[
  {
    name: "chkupd",
    description: "Check " + Application.name + " for updates.",
    params: [
      {
        name: "option",
        type: "string",
        defaultValue: null,
        description: "notes: open release notes; changeset: open changeset;\
                      history: show update history; no parameter: check for updates"
      }
    ],
    returnType: "string",
    exec: function(args, context) {
      function openURL(aURL) {
        let chromeWin = context.environment.chromeWindow ||
                        context.environment.chromeDocument.defaultView;
        chromeWin.switchToTabHavingURI(aURL, true);
      }

      let um = Cc['@mozilla.org/updates/update-manager;1'].getService(Ci.nsIUpdateManager);
      let option = args.option;

      if (option === "notes") {
        let relNotesURL;
        if (um.getUpdateAt(0))
          relNotesURL = um.getUpdateAt(0).detailsURL;

        if (!relNotesURL)
          return "No release notes.";

        if (/mozilla.com/.test(relNotesURL))
          relNotesURL = relNotesURL.replace(/mozilla.com/, "mozilla.org");

        openURL(relNotesURL);
      }

      else if (option === "changeset") {
        let req = Cc["@mozilla.org/xmlextras/xmlhttprequest;1"].createInstance(Ci.nsIXMLHttpRequest);
        req.open("GET", "about:buildconfig", false);
        req.send(null);
        let changeset = req.responseText.match(/http:\/\/hg.mozilla.org\/[^\"]*/);
        if (!changeset)
          return "No changeset on this release.";

        openURL(changeset);
      }

      else if (option === "history") {
        if (!um.getUpdateAt(0))
          return "No updates installed yet.";

        openURL("chrome://mozapps/content/update/history.xul");
      }

      else {
        let prompter = Cc['@mozilla.org/updates/update-prompt;1'].createInstance(Ci.nsIUpdatePrompt);
        if (um.activeUpdate && um.activeUpdate.state === "pending")
          prompter.showUpdateDownloaded(um.activeUpdate);
        else
          prompter.checkForUpdates();
      }
    }
  }
]
